--- 
layout: post
title: "C# e códigos deprecated"
---
<p>
  Você desenvolve uma biblioteca de utilitários para facilitar a vida dos outros desenvolvedores da empresa,
  porém algumas vezes é necessário refatorar códigos, criando/renomeando/apagando alguns métodos.
  Obviamente você não pode sair mudando tudo, existe código "antigo" usando a sua "lib".
</p>

<p>
  Existe um atributo no C# que permite que você marque código como deprecated,
  é o <code>Obsolete</code>, muito útil e fácil de usar.
</p>

<pre class="sunburst">[Obsolete(<span class="String"><span class="String">&quot;</span>Use o método MinhaClasse.MeuMetodo(int parametro)<span class="String">&quot;</span></span>)]
<span class="Keyword">public</span> <span class="Keyword">static</span> <span class="Keyword">void</span> MeuMetodo(<span class="Storage">string</span> parametro) {
    <span class="Comment"><span class="Comment">//</span> ...</span>
}
</pre>

<p>
  No exemplo acima quero que os desenvolvedores usem a versão que recebe um <code>integer</code> como parâmetro,
  e não mais a versão com <code>string</code>.
</p>

<p>
  Você ainda pode dizer que é para o compilador gerar um erro ao compilar o código,
  passando <code>true</code> como segundo parâmetro do atributo.
</p>

<pre class="sunburst">[Obsolete(<span class="String"><span class="String">&quot;</span>Este método não deve mais ser usado. Usar MinhaClasse.MeuMetodo(int parametro)<span class="String">&quot;</span></span>, <span class="Keyword">true</span>)]
<span class="Keyword">public</span> <span class="Keyword">static</span> <span class="Keyword">void</span> MeuMetodo(<span class="Storage">string</span> parametro) {
    <span class="Comment"><span class="Comment">//</span> ...</span>
}
</pre>